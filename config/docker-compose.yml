

version: '3.9'
services:
  django_app:
    build:
      context: ./src/backend/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=${APP_ENV}
      - DATABASE_URL=${DATABASE_URL}

  node_app:
    build:
      context: ./src/frontend/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${APP_ENV}

  php_app:
    image: php:8.1-apache
    ports:
      - "8080:80"
    volumes:
      - ./src/php-app:/var/www/html

  ruby_app:
    image: ruby:3.1
    ports:
      - "9292:9292"
    volumes:
      - ./src/ruby-app:/app
      - ./src/ruby-app/Gemfile:/usr/src/app/Gemfile
    command: bash -c "bundle install && rackup -o 0.0.0.0"

  go_app:
    image: golang:1.20
    ports:
      - "8081:8080"
    volumes:
      - ./src/go-app:/go/src/app
    working_dir: /go/src/app
    command: go run main.go




version: '3.8'

services:
  backend:
    build:
      context: ../src/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "2"        # Allocate up to 2 CPU cores
          memory: "2G"     # Allocate up to 2GB of memory
        reservations:
          cpus: "1"        # Reserve at least 1 CPU core
          memory: "1G"     # Reserve at least 1GB of memory

  frontend:
    build:
      context: ../src/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "512M"
        reservations:
          cpus: "0.5"
          memory: "256M"

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_db
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1G"
        reservations:
          cpus: "0.5"
          memory: "512M"

volumes:
  postgres_data:




version: '3.8'

services:
  backend:
    build:
      context: ../src/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings
    depends_on:
      - db
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "1"
          memory: "512M"

  frontend:
    build:
      context: ../src/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_db
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

volumes:
  postgres_data:





version: '3.8'

services:
  backend:
    build:
      context: ../src/backend
    ports:
      - "8000:8000"
    env_file:
      - ../config/environments/development.env
    volumes:
      - ../src/backend:/app

  frontend:
    build:
      context: ../src/frontend
    ports:
      - "3000:3000"
    env_file:
      - ../config/environments/development.env
    volumes:
      - ../src/frontend:/app




version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: flux_management_db
      POSTGRES_USER: flux_user
      POSTGRES_PASSWORD: secure_password
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build:
      context: ../src/backend
    ports:
      - "8000:8000"
    depends_on:
      - db

volumes:
  db_data:





version: '3.8'
services:
  backend:
    build: ./src/backend
    env_file: ./config/environments/development.env
    ports:
      - "8000:8000"
    depends_on:
      - db
  db:
    image: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"



version: '3.8'

services:
  backend:
    build:
      context: ../src/backend
      dockerfile: Dockerfile
    container_name: flux_backend
    env_file:
      - ../config/environments/development.env
    ports:
      - "8000:8000"
    depends_on:
      - db

  frontend:
    build:
      context: ../src/frontend
      dockerfile: Dockerfile
    container_name: flux_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000

  db:
    image: postgres:13
    container_name: flux_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus
    container_name: flux_prometheus
    volumes:
      - ../src/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: flux_grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  grafana_data:
