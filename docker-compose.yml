
version: '3.8'

services:
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: flux_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://fluxuser:fluxpassword@database:5432/fluxdb
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - CLOUD_PROVIDER=aws
    volumes:
      - ./src/backend:/app
    depends_on:
      - database

  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: flux_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    volumes:
      - ./src/frontend:/app

  database:
    image: postgres:14
    container_name: flux_database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: fluxuser
      POSTGRES_PASSWORD: fluxpassword
      POSTGRES_DB: fluxdb
    volumes:
      - database_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    container_name: flux_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./src/frontend/build:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend

volumes:
  database_data:





# docker-compose.yml - Docker configuration to set up Django, PostgreSQL, and Redis for channels

version: '3.8'
services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis:alpine
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

volumes:
  postgres_data:






version: '3.8'
services:
  backend:
    build: ./src/backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db

  frontend:
    build: ./src/frontend
    ports:
      - "3000:3000"

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus

volumes:
  postgres_data:
